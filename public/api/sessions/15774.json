{"id":15774,"date":"2018-03-23T08:30:02","time":"08:30","slug":"modern-patterns-of-concurrent-and-parallel-programming-in-net","title":"Modern patterns of concurrent and parallel programming in .NET","body":"<p><a style=\"float: right; display: inline-block; background-color: darkred; color: white; border-radius: 10px; padding: 10px; cursor: pointer; text-decoration: none; font-size: large; font-weight: bold; line-height: 10px; margin-left:15px;\" href=\"#\">Sold Out</a>Become the master of the multicore domain. Learn how to harness the powers of parallel computation and multicore computation to dominate peer applications in finance software, video games, web applications and market analysis. To yield the most performance, computer programmers have to partition and divide computations to maximize the performance while taking full advantage of multicore processors. Start your path from Padawan to Jedi, after this workshop you will be ready to return to work and have code bend to your will. </p>\n<p>Concurrency, multi-core parallelism, and distributed parallelism are powerful and accessible. These computing concepts promise big impacts on the full spectrum of software applications, including video games, web applications and market analytics suites. Programmers of these products know how to partition computations over large distributed datasets in order to take full advantage of modern hardware and computing environments. These programming skills are not easy to master. This course will introduce technologies and tools available to developers at every level who are interested in achieving high-performance, reliable and maintainable code through functional-style parallelism and concurrency.</p>\n<p>We are facing a new era of geographically-distributed, highly-available systems with processor designs that are scaling out in core counts quicker than they are scaling up in core speeds. In keeping up with performance expectations as complexities and dataset grow, scaling out software architectures over these modern computing resources is one of the biggest challenges facing developers today. </p>\n<p>This course will introduce you to technologies and tools available to developers at every level who are interested in achieving exceptional performance in applications. You will gain an insight into the best practices necessary to build concurrent and scalable programs in .NET using the functional paradigm, which covers OnPrem and Cloud based applications.</p>\n<p>Notes and comments<br />\nThe following objectives will be satisfied during the duration of the course:</p>\n<p>1.\tFunctional Programming Techniques for Concurrency<br />\n2.\tBuilding high-performance concurrent systems<br />\n3.\tImplementing high-volume real-time event stream processing<br />\n4.\tImplementing concurrent patterns such as divide-and-conquer, fork/join, producer-consumer, Map-Reduce, pipeline and more<br />\n5.\tAsynchronous Functional Combinators<br />\n6.\tApplying Reactive Programming Everywhere with Agents and Actors<br />\n7.\tHow to develop applications that scale up &#038; out using the same programming model (Agents and/or Actors)</p>\n<p>Target Audience<br />\nAny developer who want to improve their skills and employ polyglot techniques to solve concurrent problems</p>\n<p>Prerequisite<br />\nThe preferred audience for this course is as follows:<br />\n&#8211; Developer with 2-3 years&#8217; experience and/or architect.<br />\n&#8211; Basic knowledge a programming language, recommended either C# or F#<br />\n&#8211; No experience in functional programming is necessary<br />\n&#8211; Developers who want to improve their skills and employ polyglot techniques to solve problems.</p>\n","room":null,"speaker":"Riccardo Terrell","badge":"MS"}